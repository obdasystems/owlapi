package org.semanticweb.owlapi.oboformattest.parser;

import static org.junit.jupiter.api.Assertions.assertEquals;

import java.util.stream.Stream;

import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.Arguments;
import org.junit.jupiter.params.provider.MethodSource;
import org.semanticweb.owlapi.vocab.OBOFormatConstants.OboFormatTag;

class OBOFormatConstantsTestCase {
    @ParameterizedTest
    @MethodSource({"valuesHeader"})
    void shouldFindSame(int expected, OboFormatTag actual) {
        assertEquals(expected, actual.headerPriority());
    }

    @ParameterizedTest
    @MethodSource({"valuesTag"})
    void shouldFindSameTagPriority(int expected, OboFormatTag actual) {
        assertEquals(expected, actual.tagPriority());
    }

    @ParameterizedTest
    @MethodSource({"valuesTypedef"})
    void shouldFindSameTypedefPriority(int expected, OboFormatTag actual) {
        assertEquals(expected, actual.typeDefPriority());
    }

    static Stream<Arguments> valuesHeader() {
        return Stream.of(Arguments.of(Integer.valueOf(0), OboFormatTag.TAG_FORMAT_VERSION),
            Arguments.of(Integer.valueOf(85), OboFormatTag.TAG_ONTOLOGY),
            Arguments.of(Integer.valueOf(10), OboFormatTag.TAG_DATA_VERSION),
            Arguments.of(Integer.valueOf(15), OboFormatTag.TAG_DATE),
            Arguments.of(Integer.valueOf(20), OboFormatTag.TAG_SAVED_BY),
            Arguments.of(Integer.valueOf(25), OboFormatTag.TAG_AUTO_GENERATED_BY),
            Arguments.of(Integer.valueOf(80), OboFormatTag.TAG_IMPORT),
            Arguments.of(Integer.valueOf(35), OboFormatTag.TAG_SUBSETDEF),
            Arguments.of(Integer.valueOf(40), OboFormatTag.TAG_SYNONYMTYPEDEF),
            Arguments.of(Integer.valueOf(45), OboFormatTag.TAG_DEFAULT_NAMESPACE),
            Arguments.of(Integer.valueOf(50), OboFormatTag.TAG_IDSPACE),
            Arguments.of(Integer.valueOf(55), OboFormatTag.TAG_TREAT_XREFS_AS_EQUIVALENT),
            Arguments.of(Integer.valueOf(10000),
                OboFormatTag.TAG_TREAT_XREFS_AS_REVERSE_GENUS_DIFFERENTIA),
            Arguments.of(Integer.valueOf(60), OboFormatTag.TAG_TREAT_XREFS_AS_GENUS_DIFFERENTIA),
            Arguments.of(Integer.valueOf(65), OboFormatTag.TAG_TREAT_XREFS_AS_RELATIONSHIP),
            Arguments.of(Integer.valueOf(70), OboFormatTag.TAG_TREAT_XREFS_AS_IS_A),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_TREAT_XREFS_AS_HAS_SUBCLASS),
            Arguments.of(Integer.valueOf(110), OboFormatTag.TAG_OWL_AXIOMS),
            Arguments.of(Integer.valueOf(75), OboFormatTag.TAG_REMARK),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_ID),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_NAME),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_NAMESPACE),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_ALT_ID),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_DEF),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_COMMENT),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_SUBSET),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_SYNONYM),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_XREF),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_BUILTIN),
            Arguments.of(Integer.valueOf(100), OboFormatTag.TAG_PROPERTY_VALUE),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_IS_A),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_INTERSECTION_OF),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_UNION_OF),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_EQUIVALENT_TO),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_DISJOINT_FROM),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_RELATIONSHIP),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_CREATED_BY),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_CREATION_DATE),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_IS_OBSOLETE),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_REPLACED_BY),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_IS_ANONYMOUS),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_DOMAIN),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_RANGE),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_IS_ANTI_SYMMETRIC),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_IS_CYCLIC),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_IS_REFLEXIVE),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_IS_SYMMETRIC),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_IS_TRANSITIVE),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_IS_FUNCTIONAL),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_IS_INVERSE_FUNCTIONAL),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_TRANSITIVE_OVER),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_HOLDS_OVER_CHAIN),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_EQUIVALENT_TO_CHAIN),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_DISJOINT_OVER),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_EXPAND_ASSERTION_TO),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_EXPAND_EXPRESSION_TO),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_IS_CLASS_LEVEL_TAG),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_IS_METADATA_TAG),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_CONSIDER),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_INVERSE_OF),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_IS_ASYMMETRIC),
            Arguments.of(Integer.valueOf(46), OboFormatTag.TAG_NAMESPACE_ID_RULE),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_LOGICAL_DEFINITION_VIEW_RELATION),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_SCOPE),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_HAS_SYNONYM_TYPE),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_BROAD),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_NARROW),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_EXACT),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_RELATED));
    }

    static Stream<Arguments> valuesTag() {
        return Stream.of(Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_FORMAT_VERSION),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_ONTOLOGY),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_DATA_VERSION),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_DATE),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_SAVED_BY),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_AUTO_GENERATED_BY),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_IMPORT),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_SUBSETDEF),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_SYNONYMTYPEDEF),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_DEFAULT_NAMESPACE),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_IDSPACE),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_TREAT_XREFS_AS_EQUIVALENT),
            Arguments.of(Integer.valueOf(10000),
                OboFormatTag.TAG_TREAT_XREFS_AS_REVERSE_GENUS_DIFFERENTIA),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_TREAT_XREFS_AS_GENUS_DIFFERENTIA),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_TREAT_XREFS_AS_RELATIONSHIP),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_TREAT_XREFS_AS_IS_A),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_TREAT_XREFS_AS_HAS_SUBCLASS),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_OWL_AXIOMS),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_REMARK),
            Arguments.of(Integer.valueOf(5), OboFormatTag.TAG_ID),
            Arguments.of(Integer.valueOf(15), OboFormatTag.TAG_NAME),
            Arguments.of(Integer.valueOf(20), OboFormatTag.TAG_NAMESPACE),
            Arguments.of(Integer.valueOf(25), OboFormatTag.TAG_ALT_ID),
            Arguments.of(Integer.valueOf(30), OboFormatTag.TAG_DEF),
            Arguments.of(Integer.valueOf(35), OboFormatTag.TAG_COMMENT),
            Arguments.of(Integer.valueOf(40), OboFormatTag.TAG_SUBSET),
            Arguments.of(Integer.valueOf(45), OboFormatTag.TAG_SYNONYM),
            Arguments.of(Integer.valueOf(50), OboFormatTag.TAG_XREF),
            Arguments.of(Integer.valueOf(55), OboFormatTag.TAG_BUILTIN),
            Arguments.of(Integer.valueOf(98), OboFormatTag.TAG_PROPERTY_VALUE),
            Arguments.of(Integer.valueOf(65), OboFormatTag.TAG_IS_A),
            Arguments.of(Integer.valueOf(70), OboFormatTag.TAG_INTERSECTION_OF),
            Arguments.of(Integer.valueOf(80), OboFormatTag.TAG_UNION_OF),
            Arguments.of(Integer.valueOf(85), OboFormatTag.TAG_EQUIVALENT_TO),
            Arguments.of(Integer.valueOf(90), OboFormatTag.TAG_DISJOINT_FROM),
            Arguments.of(Integer.valueOf(95), OboFormatTag.TAG_RELATIONSHIP),
            Arguments.of(Integer.valueOf(130), OboFormatTag.TAG_CREATED_BY),
            Arguments.of(Integer.valueOf(140), OboFormatTag.TAG_CREATION_DATE),
            Arguments.of(Integer.valueOf(110), OboFormatTag.TAG_IS_OBSOLETE),
            Arguments.of(Integer.valueOf(115), OboFormatTag.TAG_REPLACED_BY),
            Arguments.of(Integer.valueOf(10), OboFormatTag.TAG_IS_ANONYMOUS),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_DOMAIN),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_RANGE),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_IS_ANTI_SYMMETRIC),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_IS_CYCLIC),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_IS_REFLEXIVE),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_IS_SYMMETRIC),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_IS_TRANSITIVE),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_IS_FUNCTIONAL),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_IS_INVERSE_FUNCTIONAL),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_TRANSITIVE_OVER),
            Arguments.of(Integer.valueOf(60), OboFormatTag.TAG_HOLDS_OVER_CHAIN),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_EQUIVALENT_TO_CHAIN),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_DISJOINT_OVER),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_EXPAND_ASSERTION_TO),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_EXPAND_EXPRESSION_TO),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_IS_CLASS_LEVEL_TAG),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_IS_METADATA_TAG),
            Arguments.of(Integer.valueOf(120), OboFormatTag.TAG_CONSIDER),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_INVERSE_OF),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_IS_ASYMMETRIC),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_NAMESPACE_ID_RULE),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_LOGICAL_DEFINITION_VIEW_RELATION),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_SCOPE),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_HAS_SYNONYM_TYPE),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_BROAD),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_NARROW),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_EXACT),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_RELATED));
    }

    static Stream<Arguments> valuesTypedef() {
        return Stream.of(Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_FORMAT_VERSION),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_ONTOLOGY),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_DATA_VERSION),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_DATE),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_SAVED_BY),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_AUTO_GENERATED_BY),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_IMPORT),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_SUBSETDEF),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_SYNONYMTYPEDEF),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_DEFAULT_NAMESPACE),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_IDSPACE),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_TREAT_XREFS_AS_EQUIVALENT),
            Arguments.of(Integer.valueOf(10000),
                OboFormatTag.TAG_TREAT_XREFS_AS_REVERSE_GENUS_DIFFERENTIA),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_TREAT_XREFS_AS_GENUS_DIFFERENTIA),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_TREAT_XREFS_AS_RELATIONSHIP),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_TREAT_XREFS_AS_IS_A),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_TREAT_XREFS_AS_HAS_SUBCLASS),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_OWL_AXIOMS),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_REMARK),
            Arguments.of(Integer.valueOf(5), OboFormatTag.TAG_ID),
            Arguments.of(Integer.valueOf(15), OboFormatTag.TAG_NAME),
            Arguments.of(Integer.valueOf(20), OboFormatTag.TAG_NAMESPACE),
            Arguments.of(Integer.valueOf(25), OboFormatTag.TAG_ALT_ID),
            Arguments.of(Integer.valueOf(30), OboFormatTag.TAG_DEF),
            Arguments.of(Integer.valueOf(35), OboFormatTag.TAG_COMMENT),
            Arguments.of(Integer.valueOf(40), OboFormatTag.TAG_SUBSET),
            Arguments.of(Integer.valueOf(45), OboFormatTag.TAG_SYNONYM),
            Arguments.of(Integer.valueOf(50), OboFormatTag.TAG_XREF),
            Arguments.of(Integer.valueOf(70), OboFormatTag.TAG_BUILTIN),
            Arguments.of(Integer.valueOf(55), OboFormatTag.TAG_PROPERTY_VALUE),
            Arguments.of(Integer.valueOf(115), OboFormatTag.TAG_IS_A),
            Arguments.of(Integer.valueOf(120), OboFormatTag.TAG_INTERSECTION_OF),
            Arguments.of(Integer.valueOf(125), OboFormatTag.TAG_UNION_OF),
            Arguments.of(Integer.valueOf(130), OboFormatTag.TAG_EQUIVALENT_TO),
            Arguments.of(Integer.valueOf(135), OboFormatTag.TAG_DISJOINT_FROM),
            Arguments.of(Integer.valueOf(165), OboFormatTag.TAG_RELATIONSHIP),
            Arguments.of(Integer.valueOf(191), OboFormatTag.TAG_CREATED_BY),
            Arguments.of(Integer.valueOf(192), OboFormatTag.TAG_CREATION_DATE),
            Arguments.of(Integer.valueOf(169), OboFormatTag.TAG_IS_OBSOLETE),
            Arguments.of(Integer.valueOf(185), OboFormatTag.TAG_REPLACED_BY),
            Arguments.of(Integer.valueOf(10), OboFormatTag.TAG_IS_ANONYMOUS),
            Arguments.of(Integer.valueOf(60), OboFormatTag.TAG_DOMAIN),
            Arguments.of(Integer.valueOf(65), OboFormatTag.TAG_RANGE),
            Arguments.of(Integer.valueOf(75), OboFormatTag.TAG_IS_ANTI_SYMMETRIC),
            Arguments.of(Integer.valueOf(80), OboFormatTag.TAG_IS_CYCLIC),
            Arguments.of(Integer.valueOf(85), OboFormatTag.TAG_IS_REFLEXIVE),
            Arguments.of(Integer.valueOf(90), OboFormatTag.TAG_IS_SYMMETRIC),
            Arguments.of(Integer.valueOf(100), OboFormatTag.TAG_IS_TRANSITIVE),
            Arguments.of(Integer.valueOf(105), OboFormatTag.TAG_IS_FUNCTIONAL),
            Arguments.of(Integer.valueOf(110), OboFormatTag.TAG_IS_INVERSE_FUNCTIONAL),
            Arguments.of(Integer.valueOf(145), OboFormatTag.TAG_TRANSITIVE_OVER),
            Arguments.of(Integer.valueOf(71), OboFormatTag.TAG_HOLDS_OVER_CHAIN),
            Arguments.of(Integer.valueOf(155), OboFormatTag.TAG_EQUIVALENT_TO_CHAIN),
            Arguments.of(Integer.valueOf(160), OboFormatTag.TAG_DISJOINT_OVER),
            Arguments.of(Integer.valueOf(195), OboFormatTag.TAG_EXPAND_ASSERTION_TO),
            Arguments.of(Integer.valueOf(200), OboFormatTag.TAG_EXPAND_EXPRESSION_TO),
            Arguments.of(Integer.valueOf(210), OboFormatTag.TAG_IS_CLASS_LEVEL_TAG),
            Arguments.of(Integer.valueOf(205), OboFormatTag.TAG_IS_METADATA_TAG),
            Arguments.of(Integer.valueOf(190), OboFormatTag.TAG_CONSIDER),
            Arguments.of(Integer.valueOf(140), OboFormatTag.TAG_INVERSE_OF),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_IS_ASYMMETRIC),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_NAMESPACE_ID_RULE),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_LOGICAL_DEFINITION_VIEW_RELATION),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_SCOPE),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_HAS_SYNONYM_TYPE),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_BROAD),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_NARROW),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_EXACT),
            Arguments.of(Integer.valueOf(10000), OboFormatTag.TAG_RELATED));
    }
}
